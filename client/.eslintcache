[{"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Chat.js":"2","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\UserOnline.js":"3","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Join.js":"4","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Map\\index.js":"5","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Map\\mapgl.js":"6","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\ws.js":"7","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\App.js":"8"},{"size":504,"mtime":1666897869613,"results":"9","hashOfConfig":"10"},{"size":7722,"mtime":1666926746523,"results":"11","hashOfConfig":"10"},{"size":684,"mtime":1666899054735,"results":"12","hashOfConfig":"10"},{"size":1807,"mtime":1666901907156,"results":"13","hashOfConfig":"10"},{"size":960,"mtime":1666901824326,"results":"14","hashOfConfig":"10"},{"size":3588,"mtime":1666901992675,"results":"15","hashOfConfig":"10"},{"size":72,"mtime":1666897869908,"results":"16","hashOfConfig":"10"},{"size":412,"mtime":1666897869482,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16jsqnq",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\index.js",[],"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Chat.js",["36"],"import React, { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { default as socket } from \"./ws\";\nimport UserOnline from \"./UserOnline\";\nimport Map from \"./Map\";\n\nfunction Chat() {\n  let { user_nickName } = useParams();\n  const [nickname, setNickname] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [usersOnline, setUsersOnline] = useState([]);\n  const [toUser, setToUser] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"chatConnected\")) {\n      history.push(`/`);\n    }\n\n    window.addEventListener(\"beforeunload\", () =>\n      localStorage.removeItem(\"chatConnected\")\n    );\n\n    setNickname(user_nickName);\n    socket.on(\"chat message\", ({ nickname, msg }) => {\n      setChat([...chat, { nickname, msg }]);\n    });\n\n    socket.on(\"private msg\", ({ id, nickname, msg }) => {\n      setChat([...chat, `🔒 Private Message from ${nickname}: ${msg}`]);\n    });\n\n    let objDiv = document.getElementById(\"msg\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n\n    return () => {\n      socket.off();\n    };\n  }, [chat, toUser, user_nickName, history]);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"new-user\");\n    });\n\n    socket.on(\"users-on\", (list) => {\n      setUsersOnline(list);\n    });\n\n    socket.on(\"welcome\", (user) => {\n      setChat([...chat, `Welcome to our chat ${user} 😃`]);\n    });\n\n    socket.on(\"user-disconnected\", (user) => {\n      if (user !== null) {\n        setChat([...chat, `${user} left the chat 👋🏻`]);\n      }\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [chat]);\n\n  const submitMsg = (e) => {\n    e.preventDefault();\n\n    if (msg === \"\") {\n      toast(\"Enter a message.\", {\n        duration: 4000,\n        // Styling\n        style: {},\n        className: \"\",\n        // Custom Icon\n        icon: \"⚠️\",\n        // Aria\n        role: \"status\",\n        ariaLive: \"polite\",\n      });\n    } else if (toUser === nickname) {\n      toast(\"Select a different user.\", {\n        duration: 4000,\n        // Styling\n        style: {},\n        className: \"\",\n        // Custom Icon\n        icon: \"⚠️\",\n        // Aria\n        role: \"status\",\n        ariaLive: \"polite\",\n      });\n    } else if (toUser !== \"\") {\n      let selectElem = document.getElementById(\"usersOn\");\n      selectElem.selectedIndex = 0;\n      socket.emit(\"chat message private\", { toUser, nickname, msg });\n      setChat([...chat, { nickname, msg }]);\n      setChat([...chat, `🔒 Private Message for ${toUser}: ${msg}`]);\n      setMsg(\"\");\n      setToUser(\"\");\n    } else {\n      socket.emit(\"chat message\", { nickname, msg });\n      setChat([...chat, { nickname, msg }]);\n      setMsg(\"\");\n    }\n  };\n\n  const saveUserToPrivateMsg = (userID) => {\n    setToUser(userID);\n  };\n\n  return (\n    <div>\n      {/* <Map /> */}\n      <div className=\"flex w-screen main-chat lg:h-screen bg-gray-900 divide-solid\">\n        <Toaster />\n        <div className=\"flex w-full lg:w-5/6 lg:h-5/6 lg:mx-auto lg:my-auto shadow-md\">\n          {/* Users online */}\n          <div className=\"hidden lg:block pl-4 pt-3 pr-4 w-64 bg-blue-900 text-white rounded-l-3xl\">\n            <p className=\"font-black my-4 text-xl bg-blue-300 text-blue-800 rounded-2xl p-1 px-2\">\n              {\" \"}\n              NearUs{\": \"}\n              <span className=\"text-xs font-light\">\n                ( Available Users{\" \"}\n                {usersOnline !== null ? usersOnline.length : \"0\"} )\n              </span>\n            </p>\n            <ul className=\"divide-y divide-gray-300 truncate\">\n              {usersOnline !== null\n                ? usersOnline.map((el, index) => (\n                    <button\n                      key={index}\n                      onClick={() => saveUserToPrivateMsg(el)}\n                      className=\"block focus:outline-none truncate\"\n                    >\n                      <UserOnline nickname={el} />\n                    </button>\n                  ))\n                : \"\"}\n            </ul>\n          </div>\n          <div className=\"flex flex-col flex-grow lg:max-w-full bg-blue-50 rounded-r-3xl\">\n            {/* Messages */}\n            <p className=\"font-black mt-4 mb-2 pl-4 lg:pl-8 text-2xl\">\n              Main Chat\n            </p>\n            <div\n              id=\"msg\"\n              className=\"h-5/6 overflow-y-auto pl-4 lg:pl-8 pt-4 mb-2 lg:mb-0\"\n            >\n              <ul className=\"w-full lg:w-96\">\n                {chat.map((el, index) => (\n                  <li\n                    key={index}\n                    className=\"w-screen break-words pr-6 lg:pr-0 lg:w-full\"\n                  >\n                    {el.nickname != null ? (\n                      `${el.nickname}: ${el.msg}`\n                    ) : (\n                      <p className=\"text-base font-semibold text-blue-900 rounded py-1\">\n                        {el}\n                      </p>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <form className=\"\">\n              <div className=\"px-8\">\n                <select\n                  className=\"lg:hidden text-xs flex-1 appearance-none border border-gray-300 w-full py-2 px-1 lg:px-4 bg-white text-green-400 placeholder-gray-400 shadow-sm focus:outline-none\"\n                  id=\"usersOn\"\n                  onChange={(e) => saveUserToPrivateMsg(e.target.value)}\n                >\n                  <option value=\"\" className=\"\">\n                    Everyone\n                  </option>\n                  {usersOnline !== null\n                    ? usersOnline.map((el, index) => (\n                        <option value={el} className=\"\" key={index}>\n                          {el}\n                        </option>\n                      ))\n                    : \"\"}\n                </select>\n              </div>\n              <div className=\"w-full flex p-4 lg:p-8 bg-blue-50\">\n                {\" \"}\n                <div className=\"flex relative w-full lg:w-5/6\">\n                  <span className=\"rounded-l-md inline-flex items-center px-1 lg:px-3 border-t bg-blue-400 border-l border-b  border-gray-300 text-gray-500 shadow-sm text-sm\">\n                    {toUser === \"\" ? (\n                      <p className=\" text-white text-xs lg:text-base font-normal rounded p-1\">\n                        To: Everyone\n                      </p>\n                    ) : (\n                      <p className=\" text-white text-xs lg:text-base font-semibold rounded p-1 w-20 lg:w-28 truncate\">\n                        To: {toUser}\n                      </p>\n                    )}\n                  </span>\n                  <input\n                    type=\"text\"\n                    className=\"rounded-r-lg flex-1 appearance-none border border-gray-300 w-full py-2 px-1 lg:px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none\"\n                    name=\"message\"\n                    onChange={(e) => setMsg(e.target.value)}\n                    value={msg}\n                  />\n                </div>\n                <div className=\"hidden lg:block w-1/6\">\n                  <button\n                    className=\"ml-8 flex-shrink-0 bg-black text-white text-base font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-gray-700 focus:outline-none focus:ring-2\"\n                    onClick={(e) => submitMsg(e)}\n                  >\n                    Send\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\UserOnline.js",[],"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Join.js",[],"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Map\\index.js",[],"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\Map\\mapgl.js",["37"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport \"./mapgl.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiYWRoaWxyb3NoYW4iLCJhIjoiY2w5cW05ZWt6MTJ4ajN3bzU1cnQ0czV2ciJ9.U_e1jW1cBHbGC7n6R13vXQ\";\r\n\r\nexport default function MapGL(props) {\r\n  const { coords } = props;\r\n  const mapContainer = useRef(null);\r\n  // const map = useRef(null);\r\n  const [lng, setLng] = useState(coords.longitude);\r\n  const [lat, setLat] = useState(coords.latitude);\r\n  const [zoom, setZoom] = useState(19);\r\n\r\n  useEffect(() => {\r\n    // if (map.current) return; // initialize map only once\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [lng, lat],\r\n      // zoom: zoom,\r\n      zoom: 17,\r\n      bearing: -12,\r\n      pitch: 60,\r\n      interactive: false,\r\n    });\r\n\r\n    new mapboxgl.Marker()\r\n      .setLngLat([coords.longitude, coords.latitude])\r\n      .addTo(map);\r\n\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n    \r\n    map.on(\"move\", () => {\r\n      setLng(map.current.getCenter().lng.toFixed(4));\r\n      setLat(map.current.getCenter().lat.toFixed(4));\r\n      setZoom(map.current.getZoom().toFixed(2));\r\n    });\r\n\r\n    map.addControl(\r\n      new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true,\r\n        },\r\n        // When active the map will receive updates to the device's location as it changes.\r\n        trackUserLocation: true,\r\n        // Draw an arrow next to the location dot to indicate which direction the device is heading.\r\n        showUserHeading: true,\r\n      })\r\n    );\r\n\r\n    // pixels the map pans when the up or down arrow is clicked\r\n    const deltaDistance = 100;\r\n\r\n    // degrees the map rotates when the left or right arrow is clicked\r\n    const deltaDegrees = 25;\r\n\r\n    function easing(t) {\r\n      return t * (2 - t);\r\n    }\r\n\r\n    map.on(\"load\", () => {\r\n      map.getCanvas().focus();\r\n\r\n      map.getCanvas().addEventListener(\r\n        \"keydown\",\r\n        (e) => {\r\n          e.preventDefault();\r\n          if (e.which === 38) {\r\n            // up\r\n            map.panBy([0, -deltaDistance], {\r\n              easing: easing,\r\n            });\r\n          } else if (e.which === 40) {\r\n            // down\r\n            map.panBy([0, deltaDistance], {\r\n              easing: easing,\r\n            });\r\n          } else if (e.which === 37) {\r\n            // left\r\n            map.easeTo({\r\n              bearing: map.getBearing() - deltaDegrees,\r\n              easing: easing,\r\n            });\r\n          } else if (e.which === 39) {\r\n            // right\r\n            map.easeTo({\r\n              bearing: map.getBearing() + deltaDegrees,\r\n              easing: easing,\r\n            });\r\n          }\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    // Clean up on unmount\r\n    return () => map.remove();\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (!map.current) return; // wait for map to initialize\r\n  //   map.current.on(\"move\", () => {\r\n  //     setLng(map.current.getCenter().lng.toFixed(4));\r\n  //     setLat(map.current.getCenter().lat.toFixed(4));\r\n  //     setZoom(map.current.getZoom().toFixed(2));\r\n  //   });\r\n\r\n  // });\r\n\r\n  return (\r\n    <div className=\"mapbox\">\r\n      {/* <div className=\"sidebar\">\r\n        Longitude: {lng} | Latitude: {lat} \r\n      </div> */}\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\components\\ws.js",[],"C:\\Users\\user\\Documents\\GitHub\\NearUs\\client\\src\\App.js",[],{"ruleId":"38","severity":1,"message":"39","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":11},{"ruleId":"38","severity":1,"message":"42","line":14,"column":10,"nodeType":"40","messageId":"41","endLine":14,"endColumn":14},"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'zoom' is assigned a value but never used."]